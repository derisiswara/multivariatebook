# Nonparametric Statistics

## Correlation

```{r}
# Membuat data contoh
# Membuat vektor untuk responden, X, dan Y
X <- c(2, 1, 6, 11, 7, 11, 1, 12, 13, 13, 11)
Y <- c(9, 8, 16, 13, 11, 12, 7, 7, 13, 17, 10)

# Membuat dataframe
dataku <- data.frame(X = X, Y = Y)

# Menampilkan data
dataku
```


```{r}
# Menggunakan fungsi cor.test untuk menghitung Tau-Kendall
cor.test(dataku$X, dataku$Y, method = "kendall")
```


```{r}
# Menggunakan fungsi cor.test untuk menghitung korelasi Spearman
cor.test(dataku$X, dataku$Y, method = "spearman")
```

### Chi-Square Test

```{r}
# Membuat data contoh
# Data asli dalam bentuk tabel silang
frekuensi <- matrix(c(30, 21, 30, 19, 15, 35), nrow = 2)
rownames(frekuensi) <- c("Kontrak", "Tetap")
colnames(frekuensi) <- c("Rendah", "Sedang", "Tinggi")

# Inisiasi vektor kosong untuk menyimpan data
Status_Pegawai <- c()
Tingkat_Produktivitas <- c()

# Mengulang setiap kombinasi sesuai dengan frekuensinya
for (i in 1:nrow(frekuensi)) {
  for (j in 1:ncol(frekuensi)) {
    Status_Pegawai <- c(Status_Pegawai, 
                        rep(rownames(frekuensi)[i],
                            frekuensi[i, j]))
    
    Tingkat_Produktivitas <- c(Tingkat_Produktivitas, 
                               rep(colnames(frekuensi)[j], 
                                   frekuensi[i, j]))
  }
}

# Membuat dataframe
dataku2 <- data.frame(Status_Pegawai, 
                      Tingkat_Produktivitas)
# Menampilkan data
head(dataku2)
```


```{r}
# Transformasi menejadi factor
dataku2$Status_Pegawai <- as.factor(dataku2$Status_Pegawai)
dataku2$Tingkat_Produktivitas <- as.factor(dataku2$Tingkat_Produktivitas)

summary(dataku2)
```


```{r}
# Melakukan tabel kontingensi
dataku2_kt <- table(dataku2$Status_Pegawai, dataku2$Tingkat_Produktivitas)
dataku2_kt
```


```{r}
# Melakukan uji Chi-Square
chisq.test(dataku2_kt)
```


## Difference Test
### Two sample test (Independent)

#### Mann-Whitney Test

```{r}
# Membuat data contoh
# Vektor data untuk efisiensi pada skala besar dan kecil
efisiensi_besar <- c(1.31, 1.25, 1.32, 1.3, 1.33, 1.31, 1.35, 1.34, 0.28, 1.34, 1.28)
efisiensi_kecil <- c(1.21, 1.28, 1.32, 1.25, 1.27, 1.31, 1.26, 1.31, 1.24, 1.22)
```


```{r}
wilcox.test(efisiensi_besar, efisiensi_kecil)
```

#### Chi-Square Test

### More than two sample test (Independent)

#### Kruskal-Wallis Test

```{r}
# Membuat data contoh
# Membuat vektor untuk Industri A, B, dan C
industri_A <- c(2.33, 2.79, 3.01, 2.33, 1.22, 2.79, 1.9, 1.65)
industri_B <- c(2.33, 2.33, 2.79, 3.01, 1.99, 2.45)
industri_C <- c(1.06, 1.37, 1.09, 1.65, 1.44, 1.11) 

# Membuat vektor industri
industri <- c(rep("Industri A", length(industri_A)), 
              rep("Industri B", length(industri_B)), 
              rep("Industri C", length(industri_C)))

# Menggabungkan semua vektor value
nilai <- c(industri_A, industri_B, industri_C)

# Membuat data frame
dataku4 <- data.frame(industri, nilai)

# Menampilkan data frame
dataku4$industri <- as.factor(dataku4$industri)
dataku4
```

```{r}
# Uji kruskal wallis
kruskal.test(nilai ~ industri, data = dataku4)
```

```{r}
# Post hoc kruskal-wallis - Uji Dun
#installed.packages("FSA")
library(FSA)
dunnTest(nilai ~ industri, data = dataku4)
```

#### Chi-Square Test

### Two sample test (Dependent)

#### Sign Test

```{r}
# Membuat data contoh
# Data Skor Kepuasan
produk_lama <- c(16, 15, 18, 16, 17, 18, 20, 15, 14, 16, 19, 17)
produk_baru <- c(18, 17, 16, 19, 17, 20, 18, 16, 15, 18, 20, 18)
# Data Responden
responden <- c(1:12)
# Membuat data frame
dataku5 <- data.frame(Responden = c(rep(responden, 2)),
                      Produk = factor(c(rep("Produk Lama", length(produk_lama)), 
                                        rep("Produk Baru", length(produk_baru)))),
                      Skor_Kepuasan = c(produk_lama, produk_baru))
# Menampilkan data frame
dataku5
```


```{r}
# Menghitung perbedaan
diff <- dataku5[dataku5$Produk == 'Produk Baru', ]$Skor_Kepuasan - dataku5[dataku5$Produk == 'Produk Lama', ]$Skor_Kepuasan

# Menghitung jumlah perbedaan yang positif
jumlah_positif <- sum(diff > 0)
```


```{r}
# Melakukan uji tanda
binom.test(jumlah_positif, length(diff), 
           p = 0.5, 
           alternative = "two.sided")
```

Interpretation: https://www.geeksforgeeks.org/sign-test-in-r/

### More than two sample test (Dependent)

#### Friedman Test

```{r}
# Membuat data contoh
dataku6 <- matrix(c(1.24,1.50,1.62,
              1.71,1.85,2.05,
              1.37,2.12,1.68,
              2.53,1.87,2.62,
              1.23,1.34,1.51,
              1.94,2.33,2.86,
              1.72,1.43,2.86), nrow = 7, byrow = TRUE,
              dimnames = list(Person= as.character(1:7),
              Obat = c("Obat A","Obat B","Obat C")))
dataku6
```


```{r}
friedman.test(dataku6)
```

#### Cochran Test

```{r}
# Membuat data contoh
## Input data
responden <- c(1:8)
produk_A <- c("Tidak","Tidak","Ya","Ya","Ya","Tidak","Tidak","Tidak")
produk_B <- c("Tidak","Ya","Ya","Ya","Tidak","Tidak","Ya","Tidak")
produk_C <- c("Ya","Tidak","Tidak","Ya","Tidak","Ya","Ya","Tidak")
dataku7 <- data.frame(responden, produk_A, produk_B, produk_C)
dataku7$produk_A <- as.factor(dataku7$produk_A)
dataku7$produk_B <- as.factor(dataku7$produk_B)
dataku7$produk_C <- as.factor(dataku7$produk_C)
dataku7
```

```{r}
dataku7 <-ifelse(dataku7=="Ya", 1,0)
```


```{r}
#install.packages("nonpar")
library(nonpar)
cochrans.q(as.matrix(dataku7[,-1]), alpha = 0.05)
```
